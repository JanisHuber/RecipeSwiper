name: Create and publish Docker Compose images

on:
  push:
    branches: [ 'main' ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: janishuber/recipeswiper

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build backend WAR file
        run: mvn clean package --file recipeswiper-backend/pom.xml

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push all images #todo Use single DockerFiles for backend and frontend
        id: bake
        uses: docker/bake-action@v4
        with:
          files: docker-compose.yml
          push: true
          set: |
            backend.tags=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:latest
            frontend.tags=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:latest

      - name: Extract image digests from Bake metadata
        id: extract-digests
        run: |
          echo '${{ steps.bake.outputs.metadata }}' > metadata.json
          
          BACKEND_DIGEST=$(jq -r '.backend["containerimage.digest"]' metadata.json)
          FRONTEND_DIGEST=$(jq -r '.frontend["containerimage.digest"]' metadata.json)
          
          echo "backend_digest=$BACKEND_DIGEST" >> $GITHUB_OUTPUT
          echo "frontend_digest=$FRONTEND_DIGEST" >> $GITHUB_OUTPUT      

      - name: Attest backend image
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend
          subject-digest: ${{ steps.extract-digests.outputs.backend_digest }}
          push-to-registry: true

      - name: Attest frontend image
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend
          subject-digest: ${{ steps.extract-digests.outputs.frontend_digest }}
          push-to-registry: true
